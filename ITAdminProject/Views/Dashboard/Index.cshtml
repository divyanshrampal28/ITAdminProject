@*@model ITAdminProject.Models.Dashboard

    <html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Example of Bootstrap 3 Two Column Grid Layouts for Tablets and Desktops</title>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
        <style type="text/css">

            .demo-content {
                padding: 15px;
                font-size: 18px;
                background: #dbdfe5;
                margin-bottom: 10px;
            }



                .demo-content.bg-alt {
                    background: #EEEEEE;
                }

            .scrooolll {
                overflow-y: scroll;
                height: 300px;
            }
        </style>
    </head>
    <body>

        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-3">
                <!-- card -->
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="text-uppercase text-muted">Users</div>
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <h4 class="fw-bold">
                                <div id="empcount">

                                </div>
                            </h4>
                        </div>
                    </div><!-- end panel-body -->
                </div><!-- end panel -->
            </div><!-- end col -->
        </div>


        <div class="container">
            <div class="row">
                <div class="col-sm-3 demo">
                    <div class="demo-content">

                    </div>
                </div>

                <div class="col-sm-3 demo">
                    <div class="demo-content">
                        .col-sm-3
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>

                <div class="col-sm-3 demo">
                    <div class="demo-content">
                        .col-sm-3
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>

                <div class="col-sm-3 demo">
                    <div class="demo-content">
                        .col-sm-3
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>

            </div>
            <hr>
            <!--Row with two columns divided in 1:2 ratio-->
            <div class="row">
                <div class="col-sm-8 ">
                    <div class="demo-content scrooolll">
                        .col-sm-8
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>

                        </ul>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="demo-content bg-alt">
                        Pie Chart
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>
            </div>
            <hr>
            <!--Row with two columns divided in 1:3 ratio-->
            <div class="row">
                <div class="col-sm-12">
                    <div class="demo-content scrooolll">
                        .col-sm-12
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </body>
    </html>

    <div id="empcount">
        <div>Users</div>
    </div>
    <div id="devnum">
        <div>No. of Devices</div>
    </div>
    <div id="unallotednum">
        <div>Unalloted Devices</div>
    </div>
    <div style="width: 80%; margin: 0 auto;">
        <canvas id="myPieChart"></canvas>
        <canvas id="myBarChart" width="400" height="200"></canvas>
    </div>



    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.is/2.8.0/Chart.bundle.min.js"></script>

    <script>
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        $(document).ready(function () {
            var pieChartData = @Html.Raw(Json.Serialize(Model.pielist));


            var empdata = @Html.Raw(Json.Serialize(Model.emp));

            var empticket = document.getElementById("empcount");

            var tkt = document.createElement("div");
            tkt.innerHTML = empdata;
            empticket.appendChild(tkt);



             var devdata = @Html.Raw(Json.Serialize(Model.dev));

            var devticket = document.getElementById("devnum");

            var devtkt = document.createElement("div");
            devtkt.innerHTML = devdata;
            devticket.appendChild(devtkt);

              var unalloteddata = @Html.Raw(Json.Serialize(Model.unalottedcount));

            var unallotedticket = document.getElementById("unallotednum");

            var unallotedtkt = document.createElement("div");
            unallotedtkt.innerHTML = unalloteddata;
            unallotedticket.appendChild(unallotedtkt);

            var labels = pieChartData.map(item => item.firstName);
            var dataValues = pieChartData.map(item => item.deviceCount);

            var colors = labels.map(item => getRandomColor());

            var ctx = document.getElementById("myPieChart").getContext('2d');

            var myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: dataValues,
                        backgroundColor: colors,
                        borderColor: colors,
                        borderWidth: 1
                    }]
                },
                options: {
                }
            });

            var cht2 = document.getElementById("myBarChart").getContext('2d');

        var myBarChart = new Chart(cht2, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.barlist.Select(c => c.Category))),
                datasets: [{
                    label: 'Bar Chart',
                    data: @Html.Raw(Json.Serialize(Model.barlist.Select(c => c.CategoryCount))),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: "Category Details"
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });



            @*var cht2 = document.getElementById("myBarChart").getContext('2d');

        var barChartData = @Html.Raw(Json.Serialize(Model.barlist));

        var labels = barChartData.map(item => item.Label);
        var dataValues = barChartData.map(item => item.Value);

        var myBarChart = new Chart(cht2, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Bar Chart',
                    data: dataValues,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: "Category Details"
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });*@
@*const calenderappend = document.getElementById("calender");
        const left = document.getElementById("left");
        const right = document.getElementById("right");
        var currentDateTime = new Date();
        //const currentDateISO = currentDateTime.toISOString();


        const year = currentDateTime.getFullYear();
        const month = currentDateTime.getMonth();
        const day = currentDateTime.getDate();

        const currentDate = new Date(year, month, day);
        //alert(currentDate);
        calenderappend.innerHTML = currentDate;
        //const currentDateISO = currentDateTime.toISOString();
        left.addEventListener("click", before);
        right.addEventListener("click",after);

        async function before() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() - 24);
            currentDateTime.setHours(currentDateTime.getHours() - 24);
            calenderappend.innerHTML = ''
            calenderappend.innerHTML = currentDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderBefore',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    alert("entered");
                    var par = document.createElement("div"); // Use 'document.createElement'
                    data.forEach(function (item) {
                        var child = document.createElement("div"); // Use 'document.createElement'
                        child.innerHTML = item;
                        par.appendChild(child);
                        alert(item);
                    });
                    calenderappend.appendChild(par);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }


        async function after() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() + 24);
            currentDateTime.setHours(currentDateTime.getHours() + 24);
            calenderappend.innerHTML = ''
            calenderappend.innerHTML = currentDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderAfter',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    // alert(data.Result);
                    var par = document.createElement("div");
                    data.forEach(function (item) {
                        var child = document.createElement("div");
                        child.innerHTML = item;
                        par.appendChild(child);
                        alert(item);
                    });
                    calenderappend.appendChild(par);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }
    </script>


    <h2 style="text-align:center; margin-bottom: 3rem;">Admin Dashboard</h2>*@

@model ITAdminProject.Models.Dashboard


<style>
    .dashboard {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        margin: 20px;
    }

    .roww {
        display: flex;
        justify-content: center;
        width: 100%;
        margin: 10px;
    }

    .box {
        flex: 1;
        padding: 15px;
        background-color: #f5f5f5;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

        .box h2 {
            font-size: 3rem;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .box p {
            font-size: 3rem;
            font-weight: 500;
        }

    #left, #right {
        background: none;
        color: inherit;
        border: none;
        padding: 0;
        font: inherit;
        cursor: pointer;
        outline: inherit;
    }

    #recent_history{
       display: flex;
       flex-direction: column;
       justify-content: space-between;
       height: 200px;
    }

    #row-logs{
        color: black;
        font-size: larger;
    }

    .activity_heading {
        font-size: 18px;
        font-weight: bold;
        color: #333;
        margin-bottom: 10px;
        text-transform: uppercase;
        padding-bottom: 5px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .device_history_heading, .bar_chart_heading, .pie_chart_heading {
        font-size: 18px;
        font-weight: bold;
        color: #333;
        margin-bottom: 10px;
        text-transform: uppercase;
        padding-bottom: 5px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        text-align: center;
    }

    #widget_logs{
        display: flex;
        width: 100vw;
    }

    .device_history{
        width: 30%;
        margin-right: 8%;
    }

    .recent_logs{
        width: 50%;
        
    }

</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">


<div class="dashboard">
    <!-- First Row: Parameters -->
    <div class="roww">
        <div class="box">
            <h2>Total Assets</h2>
            <p id="devnum"></p>
        </div>
        <div class="box">
            <h2>Total Users</h2>
            <p id="empcount"></p>
        </div>
        <div class="box">
            <h2>Allotted Devices</h2>
            <p id="allocatednum"></p>
        </div>
        <div class="box">
            <h2>Unallotted Devices</h2>
            <p id="unallotednum"></p>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2 class="panel-title bar_chart_heading" style="text-align:center;">Categories</h2>
                <canvas id="myBarChart" width="200" height="100"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title pie_chart_heading">Alloted Employees</h3>
                    </div>
                    <div class="panel-body">
                        <canvas id="myPieChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row" id="widget_logs">

    <div class=" col-md-4 col-sm-12 well pull-right-lg device_history" style="border:0px solid; min-height: 400px;">
        <p class="device_history_heading">
            Device History
        </p>
       
        <div class="col-md-12" style="padding:0px;">
            <br>
            <table class="table table-bordered table-style table-responsive my_table_style">
                <thead>
                    <tr>
                        <th>
                            <div class="dateAndButton">
                                <button id="left"><svg xmlns="http://www.w3.org/2000/svg" height="1.3em" viewBox="0 0 320 512"><path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l192 192c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256 246.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-192 192z" /></svg></button>
                                <div id="calender"></div>
                                <button id="right"><svg xmlns="http://www.w3.org/2000/svg" height="1.3em" viewBox="0 0 320 512"><path d="M310.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-192 192c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L242.7 256 73.4 86.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l192 192z" /></svg></button>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody id="moreRows"></tbody>
            </table>
        </div>
    </div>

    <div class=" col-md-4 col-sm-12 well pull-right-lg recent_logs" style=" min-height: 400px;">
        <p style="display:flex; justify-content: space-between;">
            <span class="activity_heading">Recent Activity</span>
            <a asp-controller="Logs" asp-action="Index">
                <span class="view_all">View all</span>   
            </a>
        </p>

        <div id="recent_history" style="padding:0px;">
            <div>
                <div id="img_logs">
                </div>
                <div id="row-logs"></div>
            </div>
            <div>
                <div id="img_logs">
                </div>
                <div id="row-logs"></div>
            </div>
            <div>
                <div id="img_logs">
                </div>
                <div id="row-logs"></div>
            </div>
            <div>
                <div id="img_logs">
                </div>
                <div id="row-logs"></div>
            </div>
            <div>
                <div id="img_logs">
                </div>
                <div id="row-logs"></div>
            </div>
        </div>
    </div>
</div>

<div class="col-md-4">

</div>



<style>
   .table-style {
        background: #F6F6F6;
        color: #ffffff;
    }

    .table-style th:nth-of-type(7), td:nth-of-type(7) {
        color: blue;
    }

    .table-style th:nth-of-type(1), td:nth-of-type(1) {
        color: black;
    }

    .table-style tr:first-child th {
        background-color: #F6F6F6;
        text-align: center;
        font-size: 15px;
    }

    .dateAndButton {
        display: flex;
        justify-content: space-between;
    }


    .demo-content {
        padding: 15px;
        font-size: 18px;
        background: #dbdfe5;
        margin-bottom: 10px;
    }



    .demo-content.bg-alt {
        background: #EEEEEE;
    }

    .scrooolll {
        overflow-y: scroll;
        height: 300px;
    }
</style>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.is/2.8.0/Chart.bundle.min.js"></script>

<script>
    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }

        color = color + Math.round(0.4 * 255).toString(16);
        return color;
    }

    $(document).ready(function () {
        var pieChartData = @Html.Raw(Json.Serialize(Model.pielist));


        var empdata = @Html.Raw(Json.Serialize(Model.emp));

        var empticket = document.getElementById("empcount");

        var tkt = document.createElement("div");
        tkt.innerHTML = empdata;
        empticket.appendChild(tkt);



         var devdata = @Html.Raw(Json.Serialize(Model.dev));

        var devticket = document.getElementById("devnum");

        var devtkt = document.createElement("div");
        devtkt.innerHTML = devdata;
        devticket.appendChild(devtkt);

        var unalloteddata = @Html.Raw(Json.Serialize(Model.unalottedcount));

        var unallotedticket = document.getElementById("unallotednum");

        var allocatednum = document.getElementById("allocatednum");

        var unallotedtkt = document.createElement("div");
        unallotedtkt.innerHTML = unalloteddata;
        unallotedticket.appendChild(unallotedtkt);

        var allotedtkt = document.createElement("div");
        allotedtkt.innerHTML = devdata - unalloteddata;
        allocatednum.appendChild(allotedtkt);

        var labels = pieChartData.map(item => item.firstName);
        var dataValues = pieChartData.map(item => item.deviceCount);

        var colors = labels.map(item => getRandomColor());

        var ctx = document.getElementById("myPieChart").getContext('2d');

        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: dataValues,
                    backgroundColor: colors,
                    borderColor: colors,
                    borderWidth: 1
                    
                }]
            },
            options: {
            }
        });

        var cht2 = document.getElementById("myBarChart").getContext('2d');

    var myBarChart = new Chart(cht2, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.barlist.Select(c => c.Category))),
            datasets: [{
                label: 'count',
                data: @Html.Raw(Json.Serialize(Model.barlist.Select(c => c.CategoryCount))),
                backgroundColor: colors,
                borderColor: colors,
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: "Category Details"
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });



        @*var cht2 = document.getElementById("myBarChart").getContext('2d');

    var barChartData = @Html.Raw(Json.Serialize(Model.barlist));

    var labels = barChartData.map(item => item.Label);
    var dataValues = barChartData.map(item => item.Value);

    var myBarChart = new Chart(cht2, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'Bar Chart',
                data: dataValues,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: "Category Details"
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });*@
    });


    const historyappend = document.getElementById("history");
    @*var parofhistory = document.createElement("div");
    var arr =  @Html.Raw(Json.Serialize(Model.glist));*@
    //alert(arr.length);
    //for (var i = 0; i < arr.length; i++) {
    //    if (arr[i] != null) {
    //        var childofhistory = document.createElement("div");
    //        childofhistory.innerHTML = arr[i];
    //        parofhistory.appendChild(childofhistory);
    //        console.log(arr[i]);
    //    }
    //}
    //historyappend.appendChild(parofhistory);





    const calenderappend = document.getElementById("calender");
    const left = document.getElementById("left");
    const right = document.getElementById("right");
    var currentDateTime = new Date();
    //const currentDateISO = currentDateTime.toISOString();


    const year = currentDateTime.getFullYear();
    const month = currentDateTime.getMonth();
    const day = currentDateTime.getDate();

    const currentDate = new Date(year, month, day);
    const options = { year: 'numeric', month: 'long', day: 'numeric' };
    const formattedDate = currentDate.toLocaleDateString('en-US', options);

    calenderappend.innerHTML = formattedDate;
    //const currentDateISO = currentDateTime.toISOString();
    left.addEventListener("click", before);
    right.addEventListener("click", after);
    const rowAdd = document.getElementById("moreRows");

    async function before() {
        var currentDateISO = currentDateTime.toISOString();
        currentDate.setHours(currentDate.getHours() - 24);
        currentDateTime.setHours(currentDateTime.getHours() - 24);
        calenderappend.innerHTML = ''
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = currentDate.toLocaleDateString('en-US', options);

        calenderappend.innerHTML = formattedDate;
        //calenderappend.innerHTML = currentDate;
        //currentDate = currentDateTime.Now.AddHours(-24);
        //alert(currentDate)
        $.ajax({
            url: '/Dashboard/CalenderBefore',
            type: 'GET',
            data: { currentDate: currentDateISO },
            //dataType: 'json',
            success: function (data) {
                //alert(data.Result);
                //var par = document.createElement("");
                rowAdd.innerHTML = '';
                data.forEach(function (item) {
                    var child = document.createElement("tr");
                    var data = document.createElement("td");
                    data.innerHTML = item;
                    child.appendChild(data);
                    rowAdd.appendChild(child);
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Why is Error");
            }
        });
    }


    async function after() {
        var currentDateISO = currentDateTime.toISOString();
        currentDate.setHours(currentDate.getHours() + 24);
        currentDateTime.setHours(currentDateTime.getHours() + 24);
        calenderappend.innerHTML = ''
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = currentDate.toLocaleDateString('en-US', options);
        calenderappend.innerHTML = formattedDate;
        //currentDate = currentDateTime.Now.AddHours(-24);
        //alert(currentDate)
        $.ajax({
            url: '/Dashboard/CalenderAfter',
            type: 'GET',
            data: { currentDate: currentDateISO },
            //dataType: 'json',
            success: function (data) {
                //alert(data.Result);
                //var par = document.createElement("");
                rowAdd.innerHTML = '';
                data.forEach(function (item) {
                    var child = document.createElement("tr");
                    var data = document.createElement("td");
                    data.innerHTML = item;
                    child.appendChild(data);
                    rowAdd.appendChild(child);
                    //alert(item);
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Why is Error");
            }
        });
    }
    document.addEventListener('DOMContentLoaded', function () {
        //alert("entered");
        left.click();
        right.click();
        var list = @Html.Raw(Json.Serialize(Model.glist));
        var passlist = [];
        list.forEach(function (element) {
            console.log(element.updatedBy);
            passlist.push(parseInt(element.updatedBy));
        })
        //console.log(passlist);
        $.ajax({
        url: "/Logs/GetUserName",
        method: "POST",
        data: { userlist: passlist },
        success: function (data) {
            //for (let e = 0; e < list.length && e < data.length; e++) {
            //    list[e].innerHTML = data[e];
            //}
            let par = document.createElement("div");
            //let body = document.getElementById("recent_history");
            let body = document.querySelectorAll("#row-logs");
            let imgs = document.querySelectorAll("#img_logs");
            for (let i = 0; i < list.length; i++) {
                let item = list[i];
                let chld = document.createElement("div");
               


                if (item.categoryName.length == 0) {
                    if (item.action === "Added") {
                        var svgElement = document.createElementNS("http://www.w3.org/2000/svg", "svg");

                        svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg");
                        svgElement.setAttribute("height", "1em");
                        svgElement.setAttribute("viewBox", "0 0 448 512");

                        var pathElement = document.createElementNS("http://www.w3.org/2000/svg", "path");
                        pathElement.setAttribute("d", "M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z");

                        svgElement.appendChild(pathElement);
                        //imgs[i].innerHTML = "hello";
                        //alert(imgs[i]);
                        imgs[i].appendChild(svgElement);
                    } else if (item.action == "Edited") {
                        var svgElement = document.createElementNS("http://www.w3.org/2000/svg", "svg");

                        svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg");
                        svgElement.setAttribute("height", "1em");
                        svgElement.setAttribute("viewBox", "0 0 512 512");

                        var pathElement = document.createElementNS("http://www.w3.org/2000/svg", "path");
                        pathElement.setAttribute("d", "M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z");

                        svgElement.appendChild(pathElement);

                        imgs[i].appendChild(svgElement);

                    } else {
                        var svgElement = document.createElementNS("http://www.w3.org/2000/svg", "svg");

                        svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg");
                        svgElement.setAttribute("height", "1em");
                        svgElement.setAttribute("viewBox", "0 0 448 512");

                        var pathElement = document.createElementNS("http://www.w3.org/2000/svg", "path");
                        pathElement.setAttribute("d", "M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z");

                        svgElement.appendChild(pathElement);

                        imgs[i].appendChild(svgElement);

                    }
                    chld.innerHTML = " Device " + item.deviceName + " was " + item.action + " by " + data[i];

                } else {
                    chld.innerHTML = " Category " + item.categoryName + " was " + item.action + " by " + data[i];

                }
                body[i].appendChild(chld);

                console.log(item);
            }
            //body.appendChild(par);
            //console.log(data)
        },
        error: function (error) {
            console.log("Error fetching user name:", error);
        }
    });
        });
</script>
<script>
    (function () {
        if (localStorage.user == null) {
            window.location.href = "/Login/Index";
        }
    })()
</script>

