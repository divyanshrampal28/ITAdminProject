@*@model ITAdminProject.Models.Dashboard

    <html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Example of Bootstrap 3 Two Column Grid Layouts for Tablets and Desktops</title>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
        <style type="text/css">

            .demo-content {
                padding: 15px;
                font-size: 18px;
                background: #dbdfe5;
                margin-bottom: 10px;
            }



                .demo-content.bg-alt {
                    background: #EEEEEE;
                }

            .scrooolll {
                overflow-y: scroll;
                height: 300px;
            }
        </style>
    </head>
    <body>

        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-3">
                <!-- card -->
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="text-uppercase text-muted">Users</div>
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <h4 class="fw-bold">
                                <div id="empcount">

                                </div>
                            </h4>
                        </div>
                    </div><!-- end panel-body -->
                </div><!-- end panel -->
            </div><!-- end col -->
        </div>


        <div class="container">
            <div class="row">
                <div class="col-sm-3 demo">
                    <div class="demo-content">

                    </div>
                </div>

                <div class="col-sm-3 demo">
                    <div class="demo-content">
                        .col-sm-3
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>

                <div class="col-sm-3 demo">
                    <div class="demo-content">
                        .col-sm-3
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>

                <div class="col-sm-3 demo">
                    <div class="demo-content">
                        .col-sm-3
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>

            </div>
            <hr>
            <!--Row with two columns divided in 1:2 ratio-->
            <div class="row">
                <div class="col-sm-8 ">
                    <div class="demo-content scrooolll">
                        .col-sm-8
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>

                        </ul>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="demo-content bg-alt">
                        Pie Chart
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>
            </div>
            <hr>
            <!--Row with two columns divided in 1:3 ratio-->
            <div class="row">
                <div class="col-sm-12">
                    <div class="demo-content scrooolll">
                        .col-sm-12
                        <ul>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                            <li>helo</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </body>
    </html>

    <div id="empcount">
        <div>Users</div>
    </div>
    <div id="devnum">
        <div>No. of Devices</div>
    </div>
    <div id="unallotednum">
        <div>Unalloted Devices</div>
    </div>
    <div style="width: 80%; margin: 0 auto;">
        <canvas id="myPieChart"></canvas>
        <canvas id="myBarChart" width="400" height="200"></canvas>
    </div>



    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.is/2.8.0/Chart.bundle.min.js"></script>

    <script>
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        $(document).ready(function () {
            var pieChartData = @Html.Raw(Json.Serialize(Model.pielist));


            var empdata = @Html.Raw(Json.Serialize(Model.emp));

            var empticket = document.getElementById("empcount");

            var tkt = document.createElement("div");
            tkt.innerHTML = empdata;
            empticket.appendChild(tkt);



             var devdata = @Html.Raw(Json.Serialize(Model.dev));

            var devticket = document.getElementById("devnum");

            var devtkt = document.createElement("div");
            devtkt.innerHTML = devdata;
            devticket.appendChild(devtkt);

              var unalloteddata = @Html.Raw(Json.Serialize(Model.unalottedcount));

            var unallotedticket = document.getElementById("unallotednum");

            var unallotedtkt = document.createElement("div");
            unallotedtkt.innerHTML = unalloteddata;
            unallotedticket.appendChild(unallotedtkt);

            var labels = pieChartData.map(item => item.firstName);
            var dataValues = pieChartData.map(item => item.deviceCount);

            var colors = labels.map(item => getRandomColor());

            var ctx = document.getElementById("myPieChart").getContext('2d');

            var myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: dataValues,
                        backgroundColor: colors,
                        borderColor: colors,
                        borderWidth: 1
                    }]
                },
                options: {
                }
            });

            var cht2 = document.getElementById("myBarChart").getContext('2d');

        var myBarChart = new Chart(cht2, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.barlist.Select(c => c.Category))),
                datasets: [{
                    label: 'Bar Chart',
                    data: @Html.Raw(Json.Serialize(Model.barlist.Select(c => c.CategoryCount))),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: "Category Details"
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });



            @*var cht2 = document.getElementById("myBarChart").getContext('2d');

        var barChartData = @Html.Raw(Json.Serialize(Model.barlist));

        var labels = barChartData.map(item => item.Label);
        var dataValues = barChartData.map(item => item.Value);

        var myBarChart = new Chart(cht2, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Bar Chart',
                    data: dataValues,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: true,
                    text: "Category Details"
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });*@
@*const calenderappend = document.getElementById("calender");
        const left = document.getElementById("left");
        const right = document.getElementById("right");
        var currentDateTime = new Date();
        //const currentDateISO = currentDateTime.toISOString();


        const year = currentDateTime.getFullYear();
        const month = currentDateTime.getMonth();
        const day = currentDateTime.getDate();

        const currentDate = new Date(year, month, day);
        //alert(currentDate);
        calenderappend.innerHTML = currentDate;
        //const currentDateISO = currentDateTime.toISOString();
        left.addEventListener("click", before);
        right.addEventListener("click",after);

        async function before() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() - 24);
            currentDateTime.setHours(currentDateTime.getHours() - 24);
            calenderappend.innerHTML = ''
            calenderappend.innerHTML = currentDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderBefore',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    alert("entered");
                    var par = document.createElement("div"); // Use 'document.createElement'
                    data.forEach(function (item) {
                        var child = document.createElement("div"); // Use 'document.createElement'
                        child.innerHTML = item;
                        par.appendChild(child);
                        alert(item);
                    });
                    calenderappend.appendChild(par);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }


        async function after() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() + 24);
            currentDateTime.setHours(currentDateTime.getHours() + 24);
            calenderappend.innerHTML = ''
            calenderappend.innerHTML = currentDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderAfter',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    // alert(data.Result);
                    var par = document.createElement("div");
                    data.forEach(function (item) {
                        var child = document.createElement("div");
                        child.innerHTML = item;
                        par.appendChild(child);
                        alert(item);
                    });
                    calenderappend.appendChild(par);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }
    </script>


    <h2 style="text-align:center; margin-bottom: 3rem;">Admin Dashboard</h2>*@

@model ITAdminProject.Models.Dashboard


<style>
    .kuchbhi {
        margin-top: 5%;
        padding: 15px;
        font-size: 18px;
        background: #dbdfe5;
        margin-bottom: 4%;
        margin-left: 6.5%;
    }

    .sabkuch {
        margin-top: 5%;
        padding: 15px;
        font-size: 18px;
        background: pink;
        margin-bottom: 4%;
        margin-left: 6.5%;
    }

    .kuchnahi {
        margin-top: 5%;
        padding: 15px;
        font-size: 18px;
        background: red;
        margin-bottom: 4%;
        margin-left: 6.5%;
    }
</style>

<div class="row">

    <div class="col-sm-2 kuchbhi">
        <div id="empcount">
            <div>Employees</div>
        </div>
    </div>


    <div class="col-sm-2 sabkuch">
        <div id="devnum">
            <div>Number of Assets</div>
        </div>
    </div>

    <div class="col-sm-2 kuchbhi">
        <div id="allocatednum">
            <div>Allocated Devices</div>
        </div>
    </div>


    <div class="col-sm-2 kuchnahi">
        <div id="unallotednum">
            <div>Unallocated Devices</div>
        </div>
    </div>

</div>






<div class="row">
    <div class="col-md-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2 class="panel-title" style="text-align:center; margin-bottom:5px;">Categories</h2>
                <canvas id="myBarChart" width="200" height="100"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Alloted Employees</h3>
                    </div>
                    <div class="panel-body">
                        <canvas id="myPieChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">
    @*<div class="col-sm-8">
        <div class="demo-content" style="max-height: 400px; overflow-y: scroll;">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Category Name</th>
                        <th>Action</th>
                        <th>Updated At</th>
                        <th>Updated By</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.glist)
                    {
                        <tr>
                            <td>@item.CategoryName</td>
                            <td>@item.Action</td>
                            <td>@item.UpdatedAtUtc</td>
                            <td>@item.UpdatedBy</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>*@

    <div class=" col-md-4 col-sm-12 well pull-right-lg" style="border:0px solid; min-height: 400px;">
        <p class="well" style="padding:10px; margin-bottom:2px; text-align:center;">
            Device History
        </p>
        <div class="col-md-12" style="padding:0px;">
            <br>
            <table class="table table-bordered table-style table-responsive">
                <thead>
                    <tr>
                        <th>
                            <div class="dateAndButton">
                                <button id="left">left</button>
                                <div id="calender"></div>
                                <button id="right">right</button>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody id="moreRows"></tbody>
            </table>
        </div>
    </div>
</div>

<div class="col-md-4">

</div>

@*<div id="history">

    </div>*@

@*<div>
        <button id="left">left</button>
        <div id="calender"></div>
        <button id="right">right</button>
    </div>*@



<style>
    .table-style .today {
        background: #2A3F54;
        color: #ffffff;
    }

    .table-style th:nth-of-type(7), td:nth-of-type(7) {
        color: blue;
    }

    .table-style th:nth-of-type(1), td:nth-of-type(1) {
        color: red;
    }

    .table-style tr:first-child th {
        background-color: #F6F6F6;
        text-align: center;
        font-size: 15px;
    }

    .dateAndButton {
        display: flex;
        justify-content: space-between;
    }


    .demo-content {
        padding: 15px;
        font-size: 18px;
        background: #dbdfe5;
        margin-bottom: 10px;
    }



        .demo-content.bg-alt {
            background: #EEEEEE;
        }

    .scrooolll {
        overflow-y: scroll;
        height: 300px;
    }
</style>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.is/2.8.0/Chart.bundle.min.js"></script>

<script>
    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    $(document).ready(function () {
        var pieChartData = @Html.Raw(Json.Serialize(Model.pielist));


        var empdata = @Html.Raw(Json.Serialize(Model.emp));

        var empticket = document.getElementById("empcount");

        var tkt = document.createElement("div");
        tkt.innerHTML = empdata;
        empticket.appendChild(tkt);



         var devdata = @Html.Raw(Json.Serialize(Model.dev));

        var devticket = document.getElementById("devnum");

        var devtkt = document.createElement("div");
        devtkt.innerHTML = devdata;
        devticket.appendChild(devtkt);

          var unalloteddata = @Html.Raw(Json.Serialize(Model.unalottedcount));

        var unallotedticket = document.getElementById("unallotednum");

        var allocatednum = document.getElementById("allocatednum");

        var unallotedtkt = document.createElement("div");
        unallotedtkt.innerHTML = unalloteddata;
        unallotedticket.appendChild(unallotedtkt);

        var allotedtkt = document.createElement("div");
        allotedtkt.innerHTML = devdata - unalloteddata;
        allocatednum.appendChild(allotedtkt);

        var labels = pieChartData.map(item => item.firstName);
        var dataValues = pieChartData.map(item => item.deviceCount);

        var colors = labels.map(item => getRandomColor());

        var ctx = document.getElementById("myPieChart").getContext('2d');

        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: dataValues,
                    backgroundColor: colors,
                    borderColor: colors,
                    borderWidth: 1
                }]
            },
            options: {
            }
        });

        var cht2 = document.getElementById("myBarChart").getContext('2d');

    var myBarChart = new Chart(cht2, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.barlist.Select(c => c.Category))),
            datasets: [{
                label: 'count',
                data: @Html.Raw(Json.Serialize(Model.barlist.Select(c => c.CategoryCount))),
                backgroundColor: colors,
                borderColor: colors,
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: "Category Details"
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });



        @*var cht2 = document.getElementById("myBarChart").getContext('2d');

    var barChartData = @Html.Raw(Json.Serialize(Model.barlist));

    var labels = barChartData.map(item => item.Label);
    var dataValues = barChartData.map(item => item.Value);

    var myBarChart = new Chart(cht2, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'Bar Chart',
                data: dataValues,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: "Category Details"
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });*@
    });


    const historyappend = document.getElementById("history");
    @*var parofhistory = document.createElement("div");
    var arr =  @Html.Raw(Json.Serialize(Model.glist));*@
    //alert(arr.length);
    //for (var i = 0; i < arr.length; i++) {
    //    if (arr[i] != null) {
    //        var childofhistory = document.createElement("div");
    //        childofhistory.innerHTML = arr[i];
    //        parofhistory.appendChild(childofhistory);
    //        console.log(arr[i]);
    //    }
    //}
    //historyappend.appendChild(parofhistory);





    const calenderappend = document.getElementById("calender");
    const left = document.getElementById("left");
    const right = document.getElementById("right");
    var currentDateTime = new Date();
    //const currentDateISO = currentDateTime.toISOString();


    const year = currentDateTime.getFullYear();
    const month = currentDateTime.getMonth();
    const day = currentDateTime.getDate();

    const currentDate = new Date(year, month, day);
    const options = { year: 'numeric', month: 'long', day: 'numeric' };
    const formattedDate = currentDate.toLocaleDateString('en-US', options);

    calenderappend.innerHTML = formattedDate;
    //const currentDateISO = currentDateTime.toISOString();
    left.addEventListener("click", before);
    right.addEventListener("click", after);
    const rowAdd = document.getElementById("moreRows");

    async function before() {
        var currentDateISO = currentDateTime.toISOString();
        currentDate.setHours(currentDate.getHours() - 24);
        currentDateTime.setHours(currentDateTime.getHours() - 24);
        calenderappend.innerHTML = ''
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = currentDate.toLocaleDateString('en-US', options);

        calenderappend.innerHTML = formattedDate;
        //calenderappend.innerHTML = currentDate;
        //currentDate = currentDateTime.Now.AddHours(-24);
        //alert(currentDate)
        $.ajax({
            url: '/Dashboard/CalenderBefore',
            type: 'GET',
            data: { currentDate: currentDateISO },
            //dataType: 'json',
            success: function (data) {
                //alert(data.Result);
                //var par = document.createElement("");
                rowAdd.innerHTML = '';
                data.forEach(function (item) {
                    var child = document.createElement("tr");
                    var data = document.createElement("td");
                    data.innerHTML = item;
                    child.appendChild(data);
                    rowAdd.appendChild(child);
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Why is Error");
            }
        });
    }


    async function after() {
        var currentDateISO = currentDateTime.toISOString();
        currentDate.setHours(currentDate.getHours() + 24);
        currentDateTime.setHours(currentDateTime.getHours() + 24);
        calenderappend.innerHTML = ''
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = currentDate.toLocaleDateString('en-US', options);
        calenderappend.innerHTML = formattedDate;
        //currentDate = currentDateTime.Now.AddHours(-24);
        //alert(currentDate)
        $.ajax({
            url: '/Dashboard/CalenderAfter',
            type: 'GET',
            data: { currentDate: currentDateISO },
            //dataType: 'json',
            success: function (data) {
                //alert(data.Result);
                //var par = document.createElement("");
                rowAdd.innerHTML = '';
                data.forEach(function (item) {
                    var child = document.createElement("tr");
                    var data = document.createElement("td");
                    data.innerHTML = item;
                    child.appendChild(data);
                    rowAdd.appendChild(child);
                    //alert(item);
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Why is Error");
            }
        });
    }
    document.addEventListener('DOMContentLoaded', function () {
        alert("entered")
        before();
        after();
    });
</script>
<script>
    (function () {
        if (localStorage.user == null) {
            window.location.href = "/Login/Index";
        }
    })()
</script>

