@model ITAdminProject.Models.Category

@{
    ViewData["Title"] = "Category";
}
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap.min.css" />
    <script defer src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script defer src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap.min.js"></script>
    <!-- jQuery -->
    <script defer src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" />

    <!-- Bootstrap JavaScript -->
    <script defer src="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <style>
        h4 {
            margin: 2rem 0rem 1rem;
        }

        .addbutton {
            display: flex;
            flex-direction: row-reverse;
            margin-bottom: 1rem;
            margin-top: 1rem;
        }

            .addbutton button {
                background-color: #012C3D;
                border: 1px solid #012C3D;
            }

        #categorytable {
            display: flex;
            text-align: center;
            justify-content: center;
            align-items: center;
            margin-left: 0.5rem;
        }

        h2 {
            color: #012C3D;
            text-align: center;
            justify-content: center;
            margin-top: 6rem;
            font-weight: bold;
        }

        .headercolor {
            background: rgba(0, 128, 0, 0.3)
        }

        .table-bordered tbody tr:nth-child(odd) {
            background-color: #ffffff; /* Set the background color for odd rows */
        }

        .table-bordered tbody tr:nth-child(even) {
            background-color: #e6e6e6; /* Set the background color for even rows */
        }
    </style>
</head>


<h2>@ViewData["Title"]</h2>

@*<form method="post" asp-action="Create" class="col-md-6">


        <div class="form-group" id="categorytable">
            <label for="categoryName" asp-for="CategoryName">Category Name:</label>
            <input type="text" id="categoryName" name="categoryName" class="form-control" asp-for="CategoryName" required>
        </div>

        <button type="submit" class="btn btn-primary">Add Category</button>
    </form>*@

<div class="addbutton">
    <button type="button" class="btn btn-primary addbutton" data-toggle="modal" data-target="#addCategory">
        + Add Category
    </button>
</div>

@if (TempData.ContainsKey("DisplayAlert") && (bool)TempData["DisplayAlert"])
{
    <script>alert('This category is allotted with a device. Delete it from the device and then continue.');</script>
}


@*<script>
        $(document).ready(function () {
            // Check if TempData contains a success message
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                alert(successMessage);
            }
        });
    </script>*@

<table class="table table-striped table-bordered">
    <thead class="headercolor">
        <tr>
            <th><input type="checkbox" id="checkAll" />Select</th>
            <th scope="col">S.No.</th>
            <th scope="col" style="text-align:center;">Category Name</th>
            <th scope="col" style="text-align:center;">Edit</th>
            <th scope="col" style="text-align:center;">Delete</th>
        </tr>
    </thead>
    <tbody id="yourTableBodyId">

        @{
            var index = 1;
        }

        @foreach (var category in ViewBag.Category)
        {

        <tr style="text-align:center;">
            <td><input type="checkbox" name="IdToChange" class="checkbox" value="@category.Id" /></td>
            <th scope="row">@index</th>
            <td>@category.CategoryName</td>
            <td>
                <button type="button" class="btn btn-success" onclick="openEditModal('@category.CategoryName', '@category.Id')"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z" /></svg></button>
            </td>
            <td>
                <button type="button" class="btn btn-danger" onclick="openDeleteModal('@category.CategoryName', '@category.Id')">
                    <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512">
                        <path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z" />
                    </svg>
                </button>
            </td>
        </tr>

            index++;

        }
    </tbody>
</table>

<button type="button" id="deleteSelectedButton"class="btn btn-primary" onclick="openDeleteSelectedModal()">Delete Selected</button>
<button type="button" id="updateAllButton" class="btn btn-primary" onclick="collectAndSubmitUpdateData()">Edit Selected</button>

<script>

    async function collectAndSubmitUpdateData()
    {
        var selectedIds = [];
       await  $('.checkbox:checked').each(function ()
        {
            selectedIds.push($(this).val());
        });
        await alert(selectedIds);
        console.log(selectedIds);
        await $.ajax({
            url: '/Category/GetSelected/',
            type: 'POST',
            data: { selectedId: selectedIds },
            success: function (data) {
                alert("excuted");
                //alert(data);
                openEditAllModal();
                for (var i = 0; i < data.length; i++) {
                    addCategoryRow(data[i], selectedIds[i]);
                }



            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Error: " + thrownError);
            }
        });


        //openEditAllModal();
        // alert(selectedIds)

        @*if (selectedIds.length > 0) {
            var updatedCategories = {};

            for (var idx = 0; idx < selectedIds.length; idx++) {
                var categoryId = selectedIds[idx];
                var newCategoryName = $("input[name='UpdatedCategories[" + categoryId + "]']").val();
                updatedCategories[categoryId] = newCategoryName;
            }

            if (Object.keys(updatedCategories).length > 0) {
                $.ajax({
                        type: "POST",
                        url: "@Url.Action("EditAll", "Category")",
                        data: { categories: updatedCategories },
                        success: function (response) {
                            if (response.success) {
                                alert("Categories updated successfully");
                                location.reload();
                            } else {
                                alert("Error: " + response.error);
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("Error: " + thrownError);
                        }
                    });
            }
            else {
                alert("No categories selected for update.");
            }
        }*@
    }

    function addCategoryRow(category,Id) {
        var newRow = $("<tr>");
        newRow.append("<td>" + category.categoryName + "</td>");
        newRow.append("<td><input type='text' name='UpdatedCategories[" + Id + "]' id='" + Id + "' class='form-control updateall' /></td>");
        //console.log(category.Id);
        console.log(Id);
        $("#categoryTableBody").append(newRow);
    }

    function openEditAllModal() {

        $("#editAllCategoriesModal").modal("show");

    }


</script>

<!--EDIT ALL BUTTON-->
<div class="modal fade" id="editAllCategoriesModal" tabindex="-1" role="dialog" aria-labelledby="editAllCategoriesModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAllCategoriesModalLabel">Edit All Categories</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editAllCategoriesForm">
                    <table class="table">
                        <thead id="updatetablehead">
                            <tr>
                                <th>Category Name</th>
                                <th>New Category Name</th>
                            </tr>
                        </thead>
                        <tbody id="categoryTableBody"></tbody>
                        @*<tbody>
                                @foreach (var category in ViewBag.Category)
                                {
                                    <tr>
                                        <td>@category.CategoryName</td>
                                        <td><input type="text" name="UpdatedCategories[@category.Id]" class="form-control" /></td>
                                    </tr>
                                }
                            </tbody>*@
                    </table>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>

                    <button type="submit" class="btn btn-primary" id="updateAllCategoriesButton" onclick=submitAll()>Save Changes</button>
                </form>
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>



<script>
    function submitAll() {
        const allinputs = document.querySelectorAll(".updateall");
        var list = [];
        for (let i = 0; i < allinputs.length; i++) {
            const input = allinputs[i];
            alert(input.value); // Access the value of each input
            alert(input.id);
            list.push({ id: input.id, value: input.value });
            // Access the value of each input
        }

        $.ajax({
            url: '/Category/UpdateAll',
            type: 'POST',
            data: { datalist: list },
            success: function (response) {
                alert(response);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Error: " + thrownError);
            }
        });


    }



    async function collectAndDeleteSelected() {
        var selectedIds = [];
        $('.checkbox:checked').each(function () {
            selectedIds.push($(this).val());
        });

        if (selectedIds.length > 0) {
            var list = [];
            for (var idx = 0; idx < selectedIds.length; idx++) {
                var cateId = selectedIds[idx];
                list.push(cateId);
            }
            await delall(list);
        } else {
            alert("No categories selected for deletion.");
        }
    }

    function openDeleteSelectedModal() {

        $("#deleteSelectedCategoryModal").modal("show");

    }

    async function delall(jsonData) {
        //alert(jsonData)
        //alert('delall function executed');
        $.ajax({
            url: '/Category/DeleteAll',
            type: 'POST',
            data: { IdToChange: jsonData },
            success: function (response) {

                if (response.success) {

                    refreshCategoryList();
                } else {
                    alert('Error: ' + response.error);
                }


            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Error: " + thrownError);
            }
        });
    }

    async function refreshCategoryList() {

        $.ajax({
            url: '/Category/Index',
            type: 'GET',
            success: function (data) {
                alert("excuted")
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Error: " + thrownError);
            }
        });
    }

    // function fetchAndPopulateData() {
    //    $.ajax({
    //        url: '/Category/GetData',
    //        type: 'GET',
    //        success: function (data) {

    //            $.each(data, function (index, item) {
    //                var row = '<tr>';
    //                row += '<td>' + item.Id + '</td>';
    //                row += '<td>' + item.CategoryName + '</td>';
    //                row += '<td><button type="button" class="btn btn-success" onclick="openEditModal(\'' + item.CategoryName + '\', ' + item.Id + ')"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 512 512"><path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z" /></svg></button></td>';
    //                row += '<td><button type="button" class="btn btn-danger" onclick="openDeleteModal(\'' + item.CategoryName + '\', ' + item.Id + ')"><svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512"><path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z" /></svg></button></td>';
    //                row += '</tr>';
    //                $('#yourTableBodyId').append(row);
    //            });
    //        },
    //        error: function (xhr, ajaxOptions, thrownError) {
    //            alert("Error: " + thrownError);
    //        }
    //    });
    //}


</script>



<!--Delete Selected Modal-->
<div class="modal fade" id="deleteSelectedCategoryModal" tabindex="-1" role="dialog" aria-labelledby="deleteSelectedCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteSelectedCategoryModalLabel">Delete Selected Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h3>Are you sure you want to delete this?</h3>
                <div>
                    <form id="deleteSelectedCategoryForm">
                        <div class="form-group">

                            <button type="submit" class="btn btn-default" id="deleteBtn" onclick="collectAndDeleteSelected()">Delete All</button>

                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>
</div>



<script>
    function openEditModal(categoryName, categoryId) {
        // Populate the modal form fields
        document.getElementById('editCategoryName').value = categoryName;
        document.getElementById('categoryId').value = categoryId;

        // Open the modal
        $('#editCategoryModal').modal('show');
    }

    //function saveEditedCategory() {

    //    var editedCategoryName = document.getElementById('editCategoryName').value;

    //    var categoryId = $('#editCategoryModal').data('categoryId');

    //    console.log(categoryId + " " + editedCategoryName);

    //}

    function openDeleteModal(categoryName, categoryId) {
        // Populate the modal content
        $("#deleteCategoryModalLabel").text("Delete Category: " + categoryName);

        // Set the category ID in the form
        $("#deleteCategoryForm input[name='Id']").val(categoryId);

        // Open the modal
        $("#deleteCategoryModal").modal("show");
    }



</script>
<!--Delete Modal-->
<div class="modal fade" id="deleteCategoryModal" tabindex="-1" role="dialog" aria-labelledby="deleteCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCategoryModalLabel">Delete Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h3>Are you sure you want to delete this?</h3>
                <div>
                    <form id="deleteCategoryForm" asp-action="Delete" method="post">
                        <div class="form-group">
                            <input type="hidden" name="Id" asp-for="Id" />
                            <button type="submit" class="btn btn-default">Delete</button>
                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm" method="post" asp-action="Edit">
                    <input type="hidden" id="categoryId" name="Id" asp-for="Id" />
                    <div class="form-group">
                        <label asp-for="CategoryName" class="control-label"></label>
                        <input type="text" asp-for="CategoryName" class="form-control" id="editCategoryName" name="CategoryName" />

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <input type="submit" value="Save Changes" class="btn btn-default" id="editSubmitBtn" />
                    </div>

                    <div id="EditErrorAlert" class="alert alert-danger" role="alert" style="display: none; margin-top: 10px;">

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!--EDIT VALIDATION FUNCTION-->

<script>
    document.getElementById('editCategoryName').addEventListener('click', function () {

        var errorBox = document.getElementById('EditErrorAlert');
        errorBox.style.display = 'none';

    });

    document.getElementById('editCategoryModal').addEventListener('mouseenter', function () {

        var errorBox = document.getElementById('EditErrorAlert');
        errorBox.style.display = 'none';

    });

    var editCategoryNameInput = document.getElementById('editCategoryName');
    var editErrorAlert = document.getElementById('EditErrorAlert');


    document.getElementById('editSubmitBtn').addEventListener('click', function (event) {
        event.preventDefault(); // Prevent the default form submission behavior
        var categoryId = document.getElementById('categoryId').value; // Get the Category Id
        var category = editCategoryNameInput.value;

        $.ajax({
            type: "POST",
            url: '/Category/Edit',
            data: { Id: categoryId, CategoryName: category }, // Include the Category Id
            success: function (data) {
                if (data.errorMessage) {
                    var errorMessage = data.errorMessage;
                    editErrorAlert.innerHTML = errorMessage;
                    editErrorAlert.style.display = 'block';
                } else {
                    $('#editCategoryModal').modal('hide');
                    location.reload();
                }
            },
            error: function (xhr, status, error) {
                console.log("Error: ", error);
            }
        });
    });
</script>

<!--Add category modal-->
<div class="modal fade" id="addCategory">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Category</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                
                <form method="post" asp-action="Create" id="addCategoryForm">
                    <div class="form-group" id="categorytable">
                        <label for="categoryName" asp-for="CategoryName" class="control-label">Category Name:</label>
                        <input type="text" id="addCategoryName" name="categoryName" class="form-control" asp-for="CategoryName"/>


                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="addSubmitBtn">Add Category</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                    <div id="addErrorAlert" class="alert alert-danger" role="alert" style="display: none; margin-top: 10px;">

                    </div>
                </form>
            
            </div>
        </div>
    </div>
</div>

<!--ADD CATEGORY VALIDATION FUNCTION-->
<script>
    document.getElementById('addCategoryName').addEventListener('click', function () {

        var errorBox = document.getElementById('addErrorAlert');
        errorBox.style.display = 'none';

    });

    document.getElementById('addCategory').addEventListener('mouseenter', function () {

        var errorBox = document.getElementById('addErrorAlert');
        errorBox.style.display = 'none';

    });

    document.getElementById('addSubmitBtn').addEventListener('click', function () {
        var category = document.getElementById('addCategoryName').value;

        $.ajax({
            type: "POST",
            url: '/Category/Create',
            data: { CategoryName: category }, // Ensure you use the correct parameter name
            success: function (data) {
                if (data.errorMessage) {
                    var errorMessage = data.errorMessage;
                    var errorBox = document.getElementById('addErrorAlert');
                    errorBox.innerHTML = errorMessage;
                    errorBox.style.display = 'block';
                } else {
                    $('#addCategory').modal('hide');
                    location.reload();
                }
            },
            error: function (xhr, status, error) {
                console.log("Error: ", error);
            }
        });

        // Prevent the default form submission behavior
        event.preventDefault();
    });


    function errofunc() {
        console.log('function changes');
    }
</script>

@if(ViewBag.ErrorMessage != null)
{
    <script>
        window.onload = function () {
            var element = document.getElementById('addErrorAlert');
            element.textContent = '@ViewBag.ErrorMessage';
            $('addCategory').modal('show');
        }
    </script>
}




@*<form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <div class="form-group">
            <label asp-for="CategoryName" class="control-label"></label>
            <input asp-for="CategoryName" class="form-control" />
            <span asp-validation-for="CategoryName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </form>*@
