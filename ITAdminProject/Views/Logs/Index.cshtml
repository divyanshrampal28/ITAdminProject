@model ITAdminProject.Models.Dashboard

<div class="row">
    <div class="col-sm-12">
        <div class="demo-content" style="max-height: 400px; overflow-y: scroll;">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                        <th>Updated At</th>
                        <th>Updated By</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.glist)
                    {
                        <tr>
                            @if (item.CategoryName.Length == 0)
                            {
                                <td>Device Name : @item.DeviceName</td>
                            }
                            else
                            {
                                <td>Category Name : @item.CategoryName</td>
                            }

                            <td>@item.Action</td>
                            <td>@item.UpdatedAtUtc</td>
                            <td>@item.UpdatedBy</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @*<div class=" col-md-4 col-sm-12 well pull-right-lg" style="border:0px solid; min-height: 400px;">
            <p class="well" style="padding:10px; margin-bottom:2px; text-align:center;">
                Device History
            </p>
            <div class="col-md-12" style="padding:0px;">
                <br>
                <table class="table table-bordered table-style table-responsive">
                    <thead>
                        <tr>
                            <th>
                                <div class="dateAndButton">
                                    <button id="left">left</button>
                                    <div id="calender"></div>
                                    <button id="right">right</button>
                                </div>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="moreRows"></tbody>
                </table>
            </div>
        </div>*@
</div>
<style>
    .table-style .today {
        background: #2A3F54;
        color: #ffffff;
    }

    .table-style th:nth-of-type(7), td:nth-of-type(7) {
        color: blue;
    }

    .table-style th:nth-of-type(1), td:nth-of-type(1) {
        color: red;
    }

    .table-style tr:first-child th {
        background-color: #F6F6F6;
        text-align: center;
        font-size: 15px;
    }

    .dateAndButton {
        display: flex;
        justify-content: space-between;
    }


    .demo-content {
        padding: 15px;
        font-size: 18px;
        background: #dbdfe5;
        margin-bottom: 10px;
    }



        .demo-content.bg-alt {
            background: #EEEEEE;
        }

    .scrooolll {
        overflow-y: scroll;
        height: 300px;
    }
</style>
<script>
    (function () {
        if (localStorage.user == null) {
            window.location.href = "/Login/Index";
        }
    })()
</script>
@*<script>
        const calenderappend = document.getElementById("calender");
        const left = document.getElementById("left");
        const right = document.getElementById("right");
        var currentDateTime = new Date();
        //const currentDateISO = currentDateTime.toISOString();


        const year = currentDateTime.getFullYear();
        const month = currentDateTime.getMonth();
        const day = currentDateTime.getDate();

        const currentDate = new Date(year, month, day);
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = currentDate.toLocaleDateString('en-US', options);

        calenderappend.innerHTML = formattedDate;
        //const currentDateISO = currentDateTime.toISOString();
        left.addEventListener("click", before);
        right.addEventListener("click", after);
        const rowAdd = document.getElementById("moreRows");

        async function before() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() - 24);
            currentDateTime.setHours(currentDateTime.getHours() - 24);
            calenderappend.innerHTML = ''
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            const formattedDate = currentDate.toLocaleDateString('en-US', options);

            calenderappend.innerHTML = formattedDate;
            //calenderappend.innerHTML = currentDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            //alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderBefore',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    //alert(data.Result);
                    //var par = document.createElement("");
                    rowAdd.innerHTML = '';
                    data.forEach(function (item) {
                        var child = document.createElement("tr");
                        var data = document.createElement("td");
                        data.innerHTML = item;
                        child.appendChild(data);
                        rowAdd.appendChild(child);
                        //alert(item);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }


        async function after() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() + 24);
            currentDateTime.setHours(currentDateTime.getHours() + 24);
            calenderappend.innerHTML = ''
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            const formattedDate = currentDate.toLocaleDateString('en-US', options);
            calenderappend.innerHTML = formattedDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            //alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderAfter',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    //alert(data.Result);
                    //var par = document.createElement("");
                    rowAdd.innerHTML = '';
                    data.forEach(function (item) {
                        var child = document.createElement("tr");
                        var data = document.createElement("td");
                        data.innerHTML = item;
                        child.appendChild(data);
                        rowAdd.appendChild(child);
                        //alert(item);
                    });

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }
    </script>*@

