@model ITAdminProject.Models.Dashboard


<div class="container">

    <form method="post" asp-action="Index" class="my-5 animated-form">
        <div class="row">
            <div class="form-group col-md-3">
                <label for="DeviceName">Search by Type:</label>
                <select class="form-control" id="type">
                    <option value="All">All</option>
                    <option value="Device">Device</option>
                    <option value="Category">Category</option>
                </select>
            </div>
            <div class="form-group col-md-3">
                <label for="DeviceName">Search by Device Name:</label>
                <select asp-items="ViewBag.DeviceName" class="form-control" id="DeviceName">
                    <option value="All">All Devices</option>
                </select>
            </div>
            @*<div class='flex flex-col'>
                <h6>Select Frequency : </h6>
                @{
                    var frequencyOptions = new List<SelectListItem>
                            {
                                new SelectListItem { Value = "7", Text = "Last one week" },
                                new SelectListItem { Value = "30", Text = "Last one Month" },
                                new SelectListItem { Value = "365", Text = "Last one Year" },
                                new SelectListItem { Value = "Custom", Text = "Custom" }
                            };
                }*@

            @*@Html.DropDownListFor(model => model.Frequency, frequencyOptions, new { @class = "form-control", onchange = "onFrequencyChange()" })*@


            @*<div class="form-group">
                        <label for="selectedDate" class="control-label">Custom Date Range:</label>
                        <div class="input-group">
                            <input type="text" id="selectedDate" name="selectedDate" class="form-control" />
                            <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                        </div>
                        <script>
                            $(document).ready(function () {
                                $('#selectedDate').daterangepicker();
                            });
                        </script>
                    </div>
                    @if (frequencyOptions. == "Custom")
                    {

                    }
                </div>*@

            <div class="form-group col-md-3">
                <label for="DeviceName">Search by Action:</label>
                <select class="form-control" id="Action">
                    <option value="All">All</option>
                    <option value="Added">Added</option>
                    <option value="Edited">Edited</option>
                    <option value="Delete">Delete</option>
                    @*<option value="year">Last Year</option>*@
                </select>
            </div>

            <div class="form-group col-md-3">
                <label for="DeviceName">Search by Time:</label>
                <select class="form-control" id="Duration">
                    <option value="All">All</option>
                    <option value="24">Last 24 Hrs</option>
                    <option value="week">Last Week</option>
                    <option value="month">Last Month</option>
                    <option value="year">Last Year</option>
                </select>
            </div>
        </div>
        <div class="text-center mt-3">
            <input type="submit" class="btn btn-primary btn-lg searchButton" id="searchButton" value="Search" />
        </div>
    </form>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="demo-content" style="max-height: 400px; overflow-y: scroll;">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                        <th>Updated At</th>
                        <th>Updated By</th>
                    </tr>
                </thead>
                <tbody id="filterlog">
                    @foreach (var item in Model.glist)
                    {
                        <tr>
                            @if (item.CategoryName.Length == 0)
                            {
                                <td>Device Name : @item.DeviceName</td>
                            }
                            else
                            {
                                <td>Category Name : @item.CategoryName</td>
                            }

                            <td>@item.Action</td>
                            <td>@item.UpdatedAtUtc</td>
                            <td id="updated-by">@item.UpdatedBy</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @*<div class=" col-md-4 col-sm-12 well pull-right-lg" style="border:0px solid; min-height: 400px;">
            <p class="well" style="padding:10px; margin-bottom:2px; text-align:center;">
                Device History
            </p>
            <div class="col-md-12" style="padding:0px;">
                <br>
                <table class="table table-bordered table-style table-responsive">
                    <thead>
                        <tr>
                            <th>
                                <div class="dateAndButton">
                                    <button id="left">left</button>
                                    <div id="calender"></div>
                                    <button id="right">right</button>
                                </div>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="moreRows"></tbody>
                </table>
            </div>
        </div>*@
</div>
<style>
    .table-style .today {
        background: #2A3F54;
        color: #ffffff;
    }

    .table-style th:nth-of-type(7), td:nth-of-type(7) {
        color: blue;
    }

    .table-style th:nth-of-type(1), td:nth-of-type(1) {
        color: red;
    }

    .table-style tr:first-child th {
        background-color: #F6F6F6;
        text-align: center;
        font-size: 15px;
    }

    .dateAndButton {
        display: flex;
        justify-content: space-between;
    }


    .demo-content {
        padding: 15px;
        font-size: 18px;
        background: #dbdfe5;
        margin-bottom: 10px;
    }



        .demo-content.bg-alt {
            background: #EEEEEE;
        }

    .scrooolll {
        overflow-y: scroll;
        height: 300px;
    }
</style>
<script>
    (function () {
        if (localStorage.user == null) {
            window.location.href = "/Login/Index";
        }
    })()
</script>

<script>
    const search = document.getElementById("searchButton");

    search.addEventListener("click", function () {
        event.preventDefault();
        var type = document.getElementById("type");
        var DeviceName = document.getElementById("DeviceName");
        var Action = document.getElementById("Action");
        var Duration = document.getElementById("Duration");
        


        $.ajax({
            url: '/Logs/Filter',
            type: 'POST',
            data: { Type: type.value, DeviceName: DeviceName.value, Action: Action.value, Duration: Duration.value },
            success: function (resp) {
                console.log(resp);

                const tbody = document.getElementById("filterlog");
                tbody.innerHTML = '';
                for (let r of resp) {
                    var row = document.createElement('tr');
                    console.log(r);
                    var cell1 = document.createElement('td');
                    if (r.deviceName != null && r.deviceName.length > 0) {
                        cell1.textContent = 'Device Name : ' + r.deviceName;
                    } else {
                        cell1.textContent = 'Category Name : ' + r.categoryName;
                    }
                    row.appendChild(cell1);

                    var cell2 = document.createElement('td');
                    cell2.textContent = r.action;
                    row.appendChild(cell2);

                    var cell3 = document.createElement('td');
                    cell3.textContent = r.updatedAtUtc;
                    row.appendChild(cell3);

                    var cell4 = document.createElement('td');
                    cell4.textContent = r.updatedBy;
                    row.appendChild(cell4);

                    tbody.appendChild(row);
                }
                alert("done");

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("Error");
            }
        });
    });
</script>



<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    var list = document.querySelectorAll("#updated-by");
        var passlist = [];
        list.forEach(function (element) {
            passlist.push(parseInt(element.innerHTML));
        })
        console.log(passlist);
        $.ajax({
            url: "/Logs/GetUserName",  // Replace with the actual URL for getting user name
            method: "POST",
            data: { userlist: passlist },
            success: function (data) {
                // Update the user name in the span
                //document.getElementById("updated-by").innerHTML = '';
                //document.getElementById("updated-by").innerHTML = data;
                for (let e = 0; e < list.length && e < data.length; e++) {
                    list[e].innerHTML = data[e];
                }
                //list.forEach(function (element) {
                //    element.innerHTML = data;
                //})
            },
            error: function (error) {
                console.log("Error fetching user name:", error);
            }
        });
        //$(document).ready(function () {
        //    // Iterate through each table row
        //    $("tbody tr").each(function () {
        //        // Extract user ID from data attribute
        //        var userId = document.getElementById("updated-by").innerHTML;
        //        userId = parseInt(userId);
        //        console.log(typeof (userId));
        //        //alert("hello");
        //        // Make AJAX call to fetch user name

        //        $.ajax({
        //            url: "/Logs/GetUserName",  // Replace with the actual URL for getting user name
        //            method: "POST",
        //            data: { userId: userId },
        //            success: function (data) {
        //                // Update the user name in the span
        //                document.getElementById("updated-by").innerHTML = '';
        //                document.getElementById("updated-by").innerHTML = data;
        //                alert("done")
        //            },
        //            error: function (error) {
        //                console.log("Error fetching user name:", error);
        //            }
        //        });
        //    });
        //});
    </script>


<script>
        const calenderappend = document.getElementById("calender");
        const left = document.getElementById("left");
        const right = document.getElementById("right");
        var currentDateTime = new Date();
        //const currentDateISO = currentDateTime.toISOString();


        const year = currentDateTime.getFullYear();
        const month = currentDateTime.getMonth();
        const day = currentDateTime.getDate();

        const currentDate = new Date(year, month, day);
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = currentDate.toLocaleDateString('en-US', options);

        calenderappend.innerHTML = formattedDate;
        //const currentDateISO = currentDateTime.toISOString();
        left.addEventListener("click", before);
        right.addEventListener("click", after);
        const rowAdd = document.getElementById("moreRows");

        async function before() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() - 24);
            currentDateTime.setHours(currentDateTime.getHours() - 24);
            calenderappend.innerHTML = ''
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            const formattedDate = currentDate.toLocaleDateString('en-US', options);

            calenderappend.innerHTML = formattedDate;
            //calenderappend.innerHTML = currentDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            //alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderBefore',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    //alert(data.Result);
                    //var par = document.createElement("");
                    rowAdd.innerHTML = '';
                    data.forEach(function (item) {
                        var child = document.createElement("tr");
                        var data = document.createElement("td");
                        data.innerHTML = item;
                        child.appendChild(data);
                        rowAdd.appendChild(child);
                        //alert(item);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }


        async function after() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() + 24);
            currentDateTime.setHours(currentDateTime.getHours() + 24);
            calenderappend.innerHTML = ''
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            const formattedDate = currentDate.toLocaleDateString('en-US', options);
            calenderappend.innerHTML = formattedDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            //alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderAfter',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    //alert(data.Result);
                    //var par = document.createElement("");
                    rowAdd.innerHTML = '';
                    data.forEach(function (item) {
                        var child = document.createElement("tr");
                        var data = document.createElement("td");
                        data.innerHTML = item;
                        child.appendChild(data);
                        rowAdd.appendChild(child);
                        //alert(item);
                    });

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }
    </script>

