@model ITAdminProject.Models.Dashboard

<style>
    .row {
        margin-top: 40px;
    }
</style>
<div class="row">
    <div class="col-sm-12">
        <div class="demo-content">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                        <th>Updated On</th>
                        <th>Updated At</th>
                        <th>Updated By</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.glist)
                    {
                        DateTime? updatedAtUtcNullable = @item.UpdatedAtUtc;

                        if (updatedAtUtcNullable.HasValue)
                        {
                            DateTime updatedAtUtc = updatedAtUtcNullable.Value;

                            // Separate date and time
                            string date = updatedAtUtc.ToString("dd-MM-yyyy"); // Change the format as needed
                            string time = updatedAtUtc.ToString("HH:mm:ss"); // Change the format as needed

                            // Now 'date' and 'time' contain the separate date and time components.

                            <tr>
                                @if (item.CategoryName.Length == 0)
                                {
                                    <td>Device Name : @item.DeviceName</td>
                                }
                                else
                                {
                                    <td>Category Name : @item.CategoryName</td>
                                }

                                <td>@item.Action</td>
                                <td>@date</td>
                                <td>@time</td>
                                @*<td>@item.UpdatedBy</td>*@
                                <td><span class="updated-by" id="updated-by">@item.UpdatedBy</span></td>
                            </tr>
                        }

                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<style>
    .table-style .today {
        background: #2A3F54;
        color: #ffffff;
    }

    .table-style th:nth-of-type(7), td:nth-of-type(7) {
        color: blue;
    }

    .table-style th:nth-of-type(1), td:nth-of-type(1) {
        color: red;
    }

    .table-style tr:first-child th {
        background-color: #F6F6F6;
        text-align: center;
        font-size: 15px;
    }

    .dateAndButton {
        display: flex;
        justify-content: space-between;
    }


    .demo-content {
        padding: 15px;
        font-size: 18px;
        background: #dbdfe5;
        margin-bottom: 10px;
    }



        .demo-content.bg-alt {
            background: #EEEEEE;
        }

    .scrooolll {
        overflow-y: scroll;
        height: 300px;
    }
</style>
<script>
    (function () {
        if (localStorage.user == null) {
            window.location.href = "/Login/Index";
        }
    })()
</script>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    var list = document.querySelectorAll("#updated-by");
    var passlist = [];
    list.forEach(function (element) {
        passlist.push(parseInt(element.innerHTML));
    })
    console.log(passlist);
            $.ajax({
                url: "/Logs/GetUserName",  // Replace with the actual URL for getting user name
                method: "POST",
                data: { userlist: passlist },
                success: function (data) {
                    // Update the user name in the span
                    //document.getElementById("updated-by").innerHTML = '';
                    //document.getElementById("updated-by").innerHTML = data;
                    for (let e = 0; e < list.length && e < data.length; e++) {
                        list[e].innerHTML = data[e];
                    }
                    //list.forEach(function (element) {
                    //    element.innerHTML = data;
                    //})
                },
                error: function (error) {
                    console.log("Error fetching user name:", error);
                }
            });
    //$(document).ready(function () {
    //    // Iterate through each table row
    //    $("tbody tr").each(function () {
    //        // Extract user ID from data attribute
    //        var userId = document.getElementById("updated-by").innerHTML;
    //        userId = parseInt(userId);
    //        console.log(typeof (userId));
    //        //alert("hello");
    //        // Make AJAX call to fetch user name
            
    //        $.ajax({
    //            url: "/Logs/GetUserName",  // Replace with the actual URL for getting user name
    //            method: "POST",
    //            data: { userId: userId },
    //            success: function (data) {
    //                // Update the user name in the span
    //                document.getElementById("updated-by").innerHTML = '';
    //                document.getElementById("updated-by").innerHTML = data;
    //                alert("done")
    //            },
    //            error: function (error) {
    //                console.log("Error fetching user name:", error);
    //            }
    //        });
    //    });
    //});
</script>


@*<script>
        const calenderappend = document.getElementById("calender");
        const left = document.getElementById("left");
        const right = document.getElementById("right");
        var currentDateTime = new Date();
        //const currentDateISO = currentDateTime.toISOString();


        const year = currentDateTime.getFullYear();
        const month = currentDateTime.getMonth();
        const day = currentDateTime.getDate();

        const currentDate = new Date(year, month, day);
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = currentDate.toLocaleDateString('en-US', options);

        calenderappend.innerHTML = formattedDate;
        //const currentDateISO = currentDateTime.toISOString();
        left.addEventListener("click", before);
        right.addEventListener("click", after);
        const rowAdd = document.getElementById("moreRows");

        async function before() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() - 24);
            currentDateTime.setHours(currentDateTime.getHours() - 24);
            calenderappend.innerHTML = ''
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            const formattedDate = currentDate.toLocaleDateString('en-US', options);

            calenderappend.innerHTML = formattedDate;
            //calenderappend.innerHTML = currentDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            //alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderBefore',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    //alert(data.Result);
                    //var par = document.createElement("");
                    rowAdd.innerHTML = '';
                    data.forEach(function (item) {
                        var child = document.createElement("tr");
                        var data = document.createElement("td");
                        data.innerHTML = item;
                        child.appendChild(data);
                        rowAdd.appendChild(child);
                        //alert(item);
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }


        async function after() {
            var currentDateISO = currentDateTime.toISOString();
            currentDate.setHours(currentDate.getHours() + 24);
            currentDateTime.setHours(currentDateTime.getHours() + 24);
            calenderappend.innerHTML = ''
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            const formattedDate = currentDate.toLocaleDateString('en-US', options);
            calenderappend.innerHTML = formattedDate;
            //currentDate = currentDateTime.Now.AddHours(-24);
            //alert(currentDate)
            $.ajax({
                url: '/Dashboard/CalenderAfter',
                type: 'GET',
                data: { currentDate: currentDateISO },
                //dataType: 'json',
                success: function (data) {
                    //alert(data.Result);
                    //var par = document.createElement("");
                    rowAdd.innerHTML = '';
                    data.forEach(function (item) {
                        var child = document.createElement("tr");
                        var data = document.createElement("td");
                        data.innerHTML = item;
                        child.appendChild(data);
                        rowAdd.appendChild(child);
                        //alert(item);
                    });

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Why is Error");
                }
            });
        }
    </script>*@

