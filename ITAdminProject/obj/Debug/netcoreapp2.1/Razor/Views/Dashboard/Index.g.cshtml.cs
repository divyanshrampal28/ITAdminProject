#pragma checksum "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1baadb22c5c68ed3ece0995d2b5c76ff931fdd61"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_Index), @"mvc.1.0.view", @"/Views/Dashboard/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/Index.cshtml", typeof(AspNetCore.Views_Dashboard_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\_ViewImports.cshtml"
using ITAdminProject;

#line default
#line hidden
#line 2 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\_ViewImports.cshtml"
using ITAdminProject.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1baadb22c5c68ed3ece0995d2b5c76ff931fdd61", @"/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b350f1b4def0de1b5655bb6d12956f8730e813e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ITAdminProject.Models.Dashboard>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(10447, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(13925, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(13971, 384, true);
            WriteLiteral(@"
    <div id=""empcount"">
        <div>Users</div>
    </div>
    <div id=""devnum"">
        <div>No. of Devices</div>
    </div>
    <div id=""unallotednum"">
        <div>Unalloted Devices</div>
    </div>
    <div style=""width: 80%; margin: 0 auto;"">
        <canvas id=""myPieChart""></canvas>
        <canvas id=""myBarChart"" width=""400"" height=""200""></canvas>
    </div>
");
            EndContext();
#line 406 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
     if (Model.glist.Count() > 0)
    {

#line default
#line hidden
            BeginContext(14397, 289, true);
            WriteLiteral(@"        <table>
            <thead>
                <tr>
                    <th>Category Name</th>
                    <th>Action</th>
                    <th>Updated At</th>
                    <th>Updated By</th>
                </tr>
            </thead>
            <tbody>
");
            EndContext();
#line 418 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                 foreach (var item in Model.glist)
                {

#line default
#line hidden
            BeginContext(14757, 54, true);
            WriteLiteral("                    <tr>\r\n                        <td>");
            EndContext();
            BeginContext(14812, 17, false);
#line 421 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                       Write(item.CategoryName);

#line default
#line hidden
            EndContext();
            BeginContext(14829, 35, true);
            WriteLiteral("</td>\r\n                        <td>");
            EndContext();
            BeginContext(14865, 11, false);
#line 422 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                       Write(item.Action);

#line default
#line hidden
            EndContext();
            BeginContext(14876, 35, true);
            WriteLiteral("</td>\r\n                        <td>");
            EndContext();
            BeginContext(14912, 17, false);
#line 423 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                       Write(item.UpdatedAtUtc);

#line default
#line hidden
            EndContext();
            BeginContext(14929, 35, true);
            WriteLiteral("</td>\r\n                        <td>");
            EndContext();
            BeginContext(14965, 14, false);
#line 424 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                       Write(item.UpdatedBy);

#line default
#line hidden
            EndContext();
            BeginContext(14979, 34, true);
            WriteLiteral("</td>\r\n                    </tr>\r\n");
            EndContext();
#line 426 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                }

#line default
#line hidden
            BeginContext(15032, 40, true);
            WriteLiteral("            </tbody>\r\n        </table>\r\n");
            EndContext();
#line 429 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
    }

    

#line default
#line hidden
            BeginContext(15127, 722, true);
            WriteLiteral(@"
    <div>
        <button id=""left"">left</button>
        <div id=""calender""></div>
        <button id=""right"">right</button>
    </div>




    <script src=""https://cdn.jsdelivr.net/npm/chart.js""></script>
    <script src=""https://code.jquery.com/jquery-3.6.0.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.is/2.8.0/Chart.bundle.min.js""></script>

    <script>
    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    $(document).ready(function () {
        var pieChartData = ");
            EndContext();
            BeginContext(15850, 39, false);
#line 459 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                      Write(Html.Raw(Json.Serialize(Model.pielist)));

#line default
#line hidden
            EndContext();
            BeginContext(15889, 29, true);
            WriteLiteral(";\r\n\r\n\r\n        var empdata = ");
            EndContext();
            BeginContext(15919, 35, false);
#line 462 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                 Write(Html.Raw(Json.Serialize(Model.emp)));

#line default
#line hidden
            EndContext();
            BeginContext(15954, 219, true);
            WriteLiteral(";\r\n\r\n        var empticket = document.getElementById(\"empcount\");\r\n\r\n        var tkt = document.createElement(\"div\");\r\n        tkt.innerHTML = empdata;\r\n        empticket.appendChild(tkt);\r\n\r\n\r\n\r\n         var devdata = ");
            EndContext();
            BeginContext(16174, 35, false);
#line 472 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                  Write(Html.Raw(Json.Serialize(Model.dev)));

#line default
#line hidden
            EndContext();
            BeginContext(16209, 229, true);
            WriteLiteral(";\r\n\r\n        var devticket = document.getElementById(\"devnum\");\r\n\r\n        var devtkt = document.createElement(\"div\");\r\n        devtkt.innerHTML = devdata;\r\n        devticket.appendChild(devtkt);\r\n\r\n          var unalloteddata = ");
            EndContext();
            BeginContext(16439, 46, false);
#line 480 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                         Write(Html.Raw(Json.Serialize(Model.unalottedcount)));

#line default
#line hidden
            EndContext();
            BeginContext(16485, 1099, true);
            WriteLiteral(@";

        var unallotedticket = document.getElementById(""unallotednum"");

        var unallotedtkt = document.createElement(""div"");
        unallotedtkt.innerHTML = unalloteddata;
        unallotedticket.appendChild(unallotedtkt);

        var labels = pieChartData.map(item => item.firstName);
        var dataValues = pieChartData.map(item => item.deviceCount);

        var colors = labels.map(item => getRandomColor());

        var ctx = document.getElementById(""myPieChart"").getContext('2d');

        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: dataValues,
                    backgroundColor: colors,
                    borderColor: colors,
                    borderWidth: 1
                }]
            },
            options: {
            }
        });

        var cht2 = document.getElementById(""myBarChart"").getContext('2d');

    var myBarChart = new");
            WriteLiteral(" Chart(cht2, {\r\n        type: \'bar\',\r\n        data: {\r\n            labels: ");
            EndContext();
            BeginContext(17585, 63, false);
#line 515 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
               Write(Html.Raw(Json.Serialize(Model.barlist.Select(c => c.Category))));

#line default
#line hidden
            EndContext();
            BeginContext(17648, 88, true);
            WriteLiteral(",\r\n            datasets: [{\r\n                label: \'Bar Chart\',\r\n                data: ");
            EndContext();
            BeginContext(17737, 68, false);
#line 518 "C:\Users\NamanMalik\Desktop\thurs_after\ITAdminProject\Views\Dashboard\Index.cshtml"
                 Write(Html.Raw(Json.Serialize(Model.barlist.Select(c => c.CategoryCount))));

#line default
#line hidden
            EndContext();
            BeginContext(17805, 455, true);
            WriteLiteral(@",
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: ""Category Details""
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });



");
            EndContext();
            BeginContext(19181, 76, true);
            WriteLiteral("    });\r\n\r\n\r\n    const historyappend = document.getElementById(\"history\");\r\n");
            EndContext();
            BeginContext(19372, 3585, true);
            WriteLiteral(@"    //alert(arr.length);
    //for (var i = 0; i < arr.length; i++) {
    //    if (arr[i] != null) {
    //        var childofhistory = document.createElement(""div"");
    //        childofhistory.innerHTML = arr[i];
    //        parofhistory.appendChild(childofhistory);
    //        console.log(arr[i]);
    //    }
    //}
    //historyappend.appendChild(parofhistory);





    const calenderappend = document.getElementById(""calender"");
    const left = document.getElementById(""left"");
    const right = document.getElementById(""right"");
    var currentDateTime = new Date();
    //const currentDateISO = currentDateTime.toISOString();


    const year = currentDateTime.getFullYear();
    const month = currentDateTime.getMonth();
    const day = currentDateTime.getDate();

    const currentDate = new Date(year, month, day);
    //alert(currentDate);
    calenderappend.innerHTML = currentDate;
    //const currentDateISO = currentDateTime.toISOString();
    left.addEventListener(""c");
            WriteLiteral(@"lick"", before);
    right.addEventListener(""click"",after);

    async function before() {
        var currentDateISO = currentDateTime.toISOString();
        currentDate.setHours(currentDate.getHours() - 24);
        currentDateTime.setHours(currentDateTime.getHours() - 24);
        calenderappend.innerHTML = ''
        calenderappend.innerHTML = currentDate;
        //currentDate = currentDateTime.Now.AddHours(-24);
        alert(currentDate)
        $.ajax({
            url: '/Dashboard/CalenderBefore',
            type: 'GET',
            data: { currentDate: currentDateISO },
            //dataType: 'json',
            success: function (data) {
                alert(""entered"");
                var par = document.createElement(""div""); // Use 'document.createElement'
                data.forEach(function (item) {
                    var child = document.createElement(""div""); // Use 'document.createElement'
                    child.innerHTML = item;
                    par.appendChild");
            WriteLiteral(@"(child);
                    alert(item);
                });
                calenderappend.appendChild(par);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(""Why is Error"");
            }
        });
    }


    async function after() {
        var currentDateISO = currentDateTime.toISOString();
        currentDate.setHours(currentDate.getHours() + 24);
        currentDateTime.setHours(currentDateTime.getHours() + 24);
        calenderappend.innerHTML = ''
        calenderappend.innerHTML = currentDate;
        //currentDate = currentDateTime.Now.AddHours(-24);
        alert(currentDate)
        $.ajax({
            url: '/Dashboard/CalenderAfter',
            type: 'GET',
            data: { currentDate: currentDateISO },
            //dataType: 'json',
            success: function (data) {
                // alert(data.Result);
                var par = document.createElement(""div"");
                data.forEach(function (item");
            WriteLiteral(@") {
                    var child = document.createElement(""div"");
                    child.innerHTML = item;
                    par.appendChild(child);
                    alert(item);
                });
                calenderappend.appendChild(par);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(""Why is Error"");
            }
        });
    }
    </script>
    <h2 style=""text-align:center; margin-bottom: 3rem;"">Admin Dashboard</h2>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ITAdminProject.Models.Dashboard> Html { get; private set; }
    }
}
#pragma warning restore 1591
