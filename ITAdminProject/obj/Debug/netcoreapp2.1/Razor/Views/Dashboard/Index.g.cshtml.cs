#pragma checksum "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\Dashboard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e401c6f1cad200143316b8025c304826c5c835f8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_Index), @"mvc.1.0.view", @"/Views/Dashboard/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Dashboard/Index.cshtml", typeof(AspNetCore.Views_Dashboard_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\_ViewImports.cshtml"
using ITAdminProject;

#line default
#line hidden
#line 2 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\_ViewImports.cshtml"
using ITAdminProject.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e401c6f1cad200143316b8025c304826c5c835f8", @"/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b350f1b4def0de1b5655bb6d12956f8730e813e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ITAdminProject.Models.Dashboard>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(10447, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(13925, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(13967, 2260, true);
            WriteLiteral(@"

<style>
    .dashboard {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        margin: 20px;
    }

    .roww {
        display: flex;
        justify-content: center;
        width: 100%;
        margin: 10px;
    }

    .box {
        flex: 1;
        padding: 15px;
        background-color: #f5f5f5;
        border: 1px solid #ccc;
        border-radius: 5px;
        margin: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    .box h2 {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 10px;
    }

    .box p {
        font-size: 3rem;
        font-weight: 500;
    }
</style>

<div class=""dashboard"">
    <!-- First Row: Parameters -->
    <div class=""roww"">
        <div class=""box"">
            <h2>Total Assets</h2>
            <p id=""devnum""></p>
        </div>
        <div class=""box"">
            <h2>Total Users</h2>
      ");
            WriteLiteral(@"      <p id=""empcount""></p>
        </div>
        <div class=""box"">
            <h2>Allotted Devices</h2>
            <p id=""allocatednum""></p>
        </div>
        <div class=""box"">
            <h2>Unallotted Devices</h2>
            <p id=""unallotednum""></p>
        </div>
    </div>
</div>


<div class=""row"">
    <div class=""col-md-8"">
        <div class=""panel panel-default"">
            <div class=""panel-heading"">
                <h2 class=""panel-title"" style=""text-align:center; margin-bottom:5px;"">Categories</h2>
                <canvas id=""myBarChart"" width=""200"" height=""100""></canvas>
            </div>
        </div>
    </div>
    <div class=""col-md-4"">
        <div class=""panel panel-default"">
            <div class=""panel-heading"">
                <div class=""panel panel-default"">
                    <div class=""panel-heading"">
                        <h3 class=""panel-title"">Alloted Employees</h3>
                    </div>
                    <div class=""panel-bod");
            WriteLiteral("y\">\r\n                        <canvas id=\"myPieChart\"></canvas>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\" id=\"widget_logs\">\r\n");
            EndContext();
            BeginContext(17172, 976, true);
            WriteLiteral(@"
    <div class="" col-md-4 col-sm-12 well pull-right-lg"" style=""border:0px solid; min-height: 400px;"">
        <p class=""well"" style=""padding:10px; margin-bottom:2px; text-align:center;"">
            Device History
        </p>
        <div class=""col-md-12"" style=""padding:0px;"">
            <br>
            <table class=""table table-bordered table-style table-responsive"">
                <thead>
                    <tr>
                        <th>
                            <div class=""dateAndButton"">
                                <button id=""left"">left</button>
                                <div id=""calender""></div>
                                <button id=""right"">right</button>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody id=""moreRows""></tbody>
            </table>
        </div>
    </div>
</div>

<div class=""col-md-4"">

</div>

");
            EndContext();
            BeginContext(18186, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(18330, 1386, true);
            WriteLiteral(@"


<style>
    .table-style .today {
        background: #2A3F54;
        color: #ffffff;
    }

    .table-style th:nth-of-type(7), td:nth-of-type(7) {
        color: blue;
    }

    .table-style th:nth-of-type(1), td:nth-of-type(1) {
        color: red;
    }

    .table-style tr:first-child th {
        background-color: #F6F6F6;
        text-align: center;
        font-size: 15px;
    }

    .dateAndButton {
        display: flex;
        justify-content: space-between;
    }


    .demo-content {
        padding: 15px;
        font-size: 18px;
        background: #dbdfe5;
        margin-bottom: 10px;
    }



        .demo-content.bg-alt {
            background: #EEEEEE;
        }

    .scrooolll {
        overflow-y: scroll;
        height: 300px;
    }
</style>


<script src=""https://cdn.jsdelivr.net/npm/chart.js""></script>
<script src=""https://code.jquery.com/jquery-3.6.0.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.is");
            WriteLiteral(@"/2.8.0/Chart.bundle.min.js""></script>

<script>
    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    $(document).ready(function () {
        var pieChartData = ");
            EndContext();
            BeginContext(19717, 39, false);
#line 610 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\Dashboard\Index.cshtml"
                      Write(Html.Raw(Json.Serialize(Model.pielist)));

#line default
#line hidden
            EndContext();
            BeginContext(19756, 29, true);
            WriteLiteral(";\r\n\r\n\r\n        var empdata = ");
            EndContext();
            BeginContext(19786, 35, false);
#line 613 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\Dashboard\Index.cshtml"
                 Write(Html.Raw(Json.Serialize(Model.emp)));

#line default
#line hidden
            EndContext();
            BeginContext(19821, 219, true);
            WriteLiteral(";\r\n\r\n        var empticket = document.getElementById(\"empcount\");\r\n\r\n        var tkt = document.createElement(\"div\");\r\n        tkt.innerHTML = empdata;\r\n        empticket.appendChild(tkt);\r\n\r\n\r\n\r\n         var devdata = ");
            EndContext();
            BeginContext(20041, 35, false);
#line 623 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\Dashboard\Index.cshtml"
                  Write(Html.Raw(Json.Serialize(Model.dev)));

#line default
#line hidden
            EndContext();
            BeginContext(20076, 229, true);
            WriteLiteral(";\r\n\r\n        var devticket = document.getElementById(\"devnum\");\r\n\r\n        var devtkt = document.createElement(\"div\");\r\n        devtkt.innerHTML = devdata;\r\n        devticket.appendChild(devtkt);\r\n\r\n          var unalloteddata = ");
            EndContext();
            BeginContext(20306, 46, false);
#line 631 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\Dashboard\Index.cshtml"
                         Write(Html.Raw(Json.Serialize(Model.unalottedcount)));

#line default
#line hidden
            EndContext();
            BeginContext(20352, 1333, true);
            WriteLiteral(@";

        var unallotedticket = document.getElementById(""unallotednum"");

        var allocatednum = document.getElementById(""allocatednum"");

        var unallotedtkt = document.createElement(""div"");
        unallotedtkt.innerHTML = unalloteddata;
        unallotedticket.appendChild(unallotedtkt);

        var allotedtkt = document.createElement(""div"");
        allotedtkt.innerHTML = devdata - unalloteddata;
        allocatednum.appendChild(allotedtkt);

        var labels = pieChartData.map(item => item.firstName);
        var dataValues = pieChartData.map(item => item.deviceCount);

        var colors = labels.map(item => getRandomColor());

        var ctx = document.getElementById(""myPieChart"").getContext('2d');

        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    data: dataValues,
                    backgroundColor: colors,
                    borderColor: col");
            WriteLiteral(@"ors,
                    borderWidth: 1
                }]
            },
            options: {
            }
        });

        var cht2 = document.getElementById(""myBarChart"").getContext('2d');

    var myBarChart = new Chart(cht2, {
        type: 'bar',
        data: {
            labels: ");
            EndContext();
            BeginContext(21686, 63, false);
#line 672 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\Dashboard\Index.cshtml"
               Write(Html.Raw(Json.Serialize(Model.barlist.Select(c => c.Category))));

#line default
#line hidden
            EndContext();
            BeginContext(21749, 84, true);
            WriteLiteral(",\r\n            datasets: [{\r\n                label: \'count\',\r\n                data: ");
            EndContext();
            BeginContext(21834, 68, false);
#line 675 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\Dashboard\Index.cshtml"
                 Write(Html.Raw(Json.Serialize(Model.barlist.Select(c => c.CategoryCount))));

#line default
#line hidden
            EndContext();
            BeginContext(21902, 419, true);
            WriteLiteral(@",
                backgroundColor: colors,
                borderColor: colors,
                borderWidth: 1
            }]
        },
        options: {
            title: {
                display: true,
                text: ""Category Details""
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });



");
            EndContext();
            BeginContext(23242, 76, true);
            WriteLiteral("    });\r\n\r\n\r\n    const historyappend = document.getElementById(\"history\");\r\n");
            EndContext();
            BeginContext(23433, 4317, true);
            WriteLiteral(@"    //alert(arr.length);
    //for (var i = 0; i < arr.length; i++) {
    //    if (arr[i] != null) {
    //        var childofhistory = document.createElement(""div"");
    //        childofhistory.innerHTML = arr[i];
    //        parofhistory.appendChild(childofhistory);
    //        console.log(arr[i]);
    //    }
    //}
    //historyappend.appendChild(parofhistory);





    const calenderappend = document.getElementById(""calender"");
    const left = document.getElementById(""left"");
    const right = document.getElementById(""right"");
    var currentDateTime = new Date();
    //const currentDateISO = currentDateTime.toISOString();


    const year = currentDateTime.getFullYear();
    const month = currentDateTime.getMonth();
    const day = currentDateTime.getDate();

    const currentDate = new Date(year, month, day);
    const options = { year: 'numeric', month: 'long', day: 'numeric' };
    const formattedDate = currentDate.toLocaleDateString('en-US', options);

    calen");
            WriteLiteral(@"derappend.innerHTML = formattedDate;
    //const currentDateISO = currentDateTime.toISOString();
    left.addEventListener(""click"", before);
    right.addEventListener(""click"", after);
    const rowAdd = document.getElementById(""moreRows"");

    async function before() {
        var currentDateISO = currentDateTime.toISOString();
        currentDate.setHours(currentDate.getHours() - 24);
        currentDateTime.setHours(currentDateTime.getHours() - 24);
        calenderappend.innerHTML = ''
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        const formattedDate = currentDate.toLocaleDateString('en-US', options);

        calenderappend.innerHTML = formattedDate;
        //calenderappend.innerHTML = currentDate;
        //currentDate = currentDateTime.Now.AddHours(-24);
        //alert(currentDate)
        $.ajax({
            url: '/Dashboard/CalenderBefore',
            type: 'GET',
            data: { currentDate: currentDateISO },
            //dataType");
            WriteLiteral(@": 'json',
            success: function (data) {
                //alert(data.Result);
                //var par = document.createElement("""");
                rowAdd.innerHTML = '';
                data.forEach(function (item) {
                    var child = document.createElement(""tr"");
                    var data = document.createElement(""td"");
                    data.innerHTML = item;
                    child.appendChild(data);
                    rowAdd.appendChild(child);
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(""Why is Error"");
            }
        });
    }


    async function after() {
        var currentDateISO = currentDateTime.toISOString();
        currentDate.setHours(currentDate.getHours() + 24);
        currentDateTime.setHours(currentDateTime.getHours() + 24);
        calenderappend.innerHTML = ''
        const options = { year: 'numeric', month: 'long', day: 'numeric' };
        cons");
            WriteLiteral(@"t formattedDate = currentDate.toLocaleDateString('en-US', options);
        calenderappend.innerHTML = formattedDate;
        //currentDate = currentDateTime.Now.AddHours(-24);
        //alert(currentDate)
        $.ajax({
            url: '/Dashboard/CalenderAfter',
            type: 'GET',
            data: { currentDate: currentDateISO },
            //dataType: 'json',
            success: function (data) {
                //alert(data.Result);
                //var par = document.createElement("""");
                rowAdd.innerHTML = '';
                data.forEach(function (item) {
                    var child = document.createElement(""tr"");
                    var data = document.createElement(""td"");
                    data.innerHTML = item;
                    child.appendChild(data);
                    rowAdd.appendChild(child);
                    //alert(item);
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
              ");
            WriteLiteral("  alert(\"Why is Error\");\r\n            }\r\n        });\r\n    }\r\n    document.addEventListener(\'DOMContentLoaded\', function () {\r\n        //alert(\"entered\");\r\n        left.click();\r\n        right.click();\r\n        var list = ");
            EndContext();
            BeginContext(27751, 37, false);
#line 843 "C:\Users\DivyanshRampal\Documents\ITADMIN3\ITAdminProject\Views\Dashboard\Index.cshtml"
              Write(Html.Raw(Json.Serialize(Model.glist)));

#line default
#line hidden
            EndContext();
            BeginContext(27788, 1676, true);
            WriteLiteral(@";
        var passlist = [];
        list.forEach(function (element) {
            console.log(element.updatedBy);
            passlist.push(parseInt(element.updatedBy));
        })
        //console.log(passlist);
        $.ajax({
        url: ""/Logs/GetUserName"",  
        method: ""POST"",
        data: { userlist: passlist },
        success: function (data) {
            //for (let e = 0; e < list.length && e < data.length; e++) {
            //    list[e].innerHTML = data[e];
            //}
            let par = document.createElement(""div"");
            let body = document.getElementById(""widget_logs"");
            for (let i = 0; i < list.length; i++) {
                let item = list[i];
                let chld = document.createElement(""div"");
                if (item.categoryName.length == 0) {
                    chld.innerHTML = ""Device "" + item.deviceName + "" was "" + item.action + "" by "" + data[i];
                    alert(item.deviceName);
                } else {
      ");
            WriteLiteral(@"              chld.innerHTML = ""Category "" + item.categoryName + "" was "" + item.action + "" by "" + data[i];
                    alert(""yes"");
                }
                par.appendChild(chld);
                
                console.log(item);
            }
            body.appendChild(par);
            //console.log(data);
        },
        error: function (error) {
            console.log(""Error fetching user name:"", error);
        }
    });
        });
</script>
<script>
    (function () {
        if (localStorage.user == null) {
            window.location.href = ""/Login/Index"";
        }
    })()
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ITAdminProject.Models.Dashboard> Html { get; private set; }
    }
}
#pragma warning restore 1591
