#pragma checksum "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "170174bf93cdbbee0e6b6cdf12fb78ff457d1d64"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Logs_Index), @"mvc.1.0.view", @"/Views/Logs/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Logs/Index.cshtml", typeof(AspNetCore.Views_Logs_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\_ViewImports.cshtml"
using ITAdminProject;

#line default
#line hidden
#line 2 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\_ViewImports.cshtml"
using ITAdminProject.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"170174bf93cdbbee0e6b6cdf12fb78ff457d1d64", @"/Views/Logs/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b350f1b4def0de1b5655bb6d12956f8730e813e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Logs_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ITAdminProject.Models.Dashboard>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(40, 559, true);
            WriteLiteral(@"
<style>
    .row {
        margin-top: 40px;
    }
</style>
<div class=""row"">
    <div class=""col-sm-12"">
        <div class=""demo-content"">
            <table class=""table table-striped table-bordered"">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Action</th>
                        <th>Updated On</th>
                        <th>Updated At</th>
                        <th>Updated By</th>
                    </tr>
                </thead>
                <tbody>
");
            EndContext();
#line 22 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                     foreach (var item in Model.glist)
                    {
                        DateTime? updatedAtUtcNullable = @item.UpdatedAtUtc;

                        if (updatedAtUtcNullable.HasValue)
                        {
                            DateTime updatedAtUtc = updatedAtUtcNullable.Value;

                            // Separate date and time
                            string date = updatedAtUtc.ToString("dd-MM-yyyy"); // Change the format as needed
                            string time = updatedAtUtc.ToString("HH:mm:ss"); // Change the format as needed

                            // Now 'date' and 'time' contain the separate date and time components.


#line default
#line hidden
            BeginContext(1308, 34, true);
            WriteLiteral("                            <tr>\r\n");
            EndContext();
#line 37 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                                 if (item.CategoryName.Length == 0)
                                {

#line default
#line hidden
            BeginContext(1446, 54, true);
            WriteLiteral("                                    <td>Device Name : ");
            EndContext();
            BeginContext(1501, 15, false);
#line 39 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                                                 Write(item.DeviceName);

#line default
#line hidden
            EndContext();
            BeginContext(1516, 7, true);
            WriteLiteral("</td>\r\n");
            EndContext();
#line 40 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                                }
                                else
                                {

#line default
#line hidden
            BeginContext(1631, 56, true);
            WriteLiteral("                                    <td>Category Name : ");
            EndContext();
            BeginContext(1688, 17, false);
#line 43 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                                                   Write(item.CategoryName);

#line default
#line hidden
            EndContext();
            BeginContext(1705, 7, true);
            WriteLiteral("</td>\r\n");
            EndContext();
#line 44 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                                }

#line default
#line hidden
            BeginContext(1747, 38, true);
            WriteLiteral("\r\n                                <td>");
            EndContext();
            BeginContext(1786, 11, false);
#line 46 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                               Write(item.Action);

#line default
#line hidden
            EndContext();
            BeginContext(1797, 43, true);
            WriteLiteral("</td>\r\n                                <td>");
            EndContext();
            BeginContext(1841, 4, false);
#line 47 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                               Write(date);

#line default
#line hidden
            EndContext();
            BeginContext(1845, 43, true);
            WriteLiteral("</td>\r\n                                <td>");
            EndContext();
            BeginContext(1889, 4, false);
#line 48 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                               Write(time);

#line default
#line hidden
            EndContext();
            BeginContext(1893, 7, true);
            WriteLiteral("</td>\r\n");
            EndContext();
            BeginContext(1962, 77, true);
            WriteLiteral("                                <td><span class=\"updated-by\" id=\"updated-by\">");
            EndContext();
            BeginContext(2040, 14, false);
#line 50 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                                                                        Write(item.UpdatedBy);

#line default
#line hidden
            EndContext();
            BeginContext(2054, 49, true);
            WriteLiteral("</span></td>\r\n                            </tr>\r\n");
            EndContext();
#line 52 "C:\Users\DivyanshRampal\Documents\ItAdmin2\ITAdminProject\Views\Logs\Index.cshtml"
                        }

                    }

#line default
#line hidden
            BeginContext(2155, 3437, true);
            WriteLiteral(@"                </tbody>
            </table>
        </div>
    </div>
</div>
<style>
    .table-style .today {
        background: #2A3F54;
        color: #ffffff;
    }

    .table-style th:nth-of-type(7), td:nth-of-type(7) {
        color: blue;
    }

    .table-style th:nth-of-type(1), td:nth-of-type(1) {
        color: red;
    }

    .table-style tr:first-child th {
        background-color: #F6F6F6;
        text-align: center;
        font-size: 15px;
    }

    .dateAndButton {
        display: flex;
        justify-content: space-between;
    }


    .demo-content {
        padding: 15px;
        font-size: 18px;
        background: #dbdfe5;
        margin-bottom: 10px;
    }



        .demo-content.bg-alt {
            background: #EEEEEE;
        }

    .scrooolll {
        overflow-y: scroll;
        height: 300px;
    }
</style>
<script>
    (function () {
        if (localStorage.user == null) {
            window.location.href = ""/Login/Ind");
            WriteLiteral(@"ex"";
        }
    })()
</script>

<script src=""https://code.jquery.com/jquery-3.6.4.min.js""></script>
<script>
    var list = document.querySelectorAll(""#updated-by"");
    var passlist = [];
    list.forEach(function (element) {
        passlist.push(parseInt(element.innerHTML));
    })
    console.log(passlist);
            $.ajax({
                url: ""/Logs/GetUserName"",  // Replace with the actual URL for getting user name
                method: ""POST"",
                data: { userlist: passlist },
                success: function (data) {
                    // Update the user name in the span
                    //document.getElementById(""updated-by"").innerHTML = '';
                    //document.getElementById(""updated-by"").innerHTML = data;
                    for (let e = 0; e < list.length && e < data.length; e++) {
                        list[e].innerHTML = data[e];
                    }
                    //list.forEach(function (element) {
                    //   ");
            WriteLiteral(@" element.innerHTML = data;
                    //})
                },
                error: function (error) {
                    console.log(""Error fetching user name:"", error);
                }
            });
    //$(document).ready(function () {
    //    // Iterate through each table row
    //    $(""tbody tr"").each(function () {
    //        // Extract user ID from data attribute
    //        var userId = document.getElementById(""updated-by"").innerHTML;
    //        userId = parseInt(userId);
    //        console.log(typeof (userId));
    //        //alert(""hello"");
    //        // Make AJAX call to fetch user name
            
    //        $.ajax({
    //            url: ""/Logs/GetUserName"",  // Replace with the actual URL for getting user name
    //            method: ""POST"",
    //            data: { userId: userId },
    //            success: function (data) {
    //                // Update the user name in the span
    //                document.getElementById(""u");
            WriteLiteral(@"pdated-by"").innerHTML = '';
    //                document.getElementById(""updated-by"").innerHTML = data;
    //                alert(""done"")
    //            },
    //            error: function (error) {
    //                console.log(""Error fetching user name:"", error);
    //            }
    //        });
    //    });
    //});
</script>


");
            EndContext();
            BeginContext(9751, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ITAdminProject.Models.Dashboard> Html { get; private set; }
    }
}
#pragma warning restore 1591
